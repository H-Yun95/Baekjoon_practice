'''
MenOfPassion(A[], n) {
    sum <- 0;
    for i <- 1 to n
        for j <- 1 to n
            sum <- sum + A[i] × A[j]; # 코드1
    return sum;
}
'''
n = int(input())
print(n*n)
print(2)

'''
반복문이 중첩으로 돌아간다. 이를테면 n이 3이라면,
0-(0,1,2), 1-(0,1,2), 2-(0,1,2)의 수능로 돌아가 총 9번 반복한다는 것.
그러므로 O(n^2)의 시간복잡도를 가지며, n의 크기가 늘어날 수록 연산은
n^2의 꼴로 늘어난다. 그러므로 최고차항은 2.
중요한건 시간복잡도는 정확한 다항식을 산출하는게 아니라, 최고차항을 통해
이 알고리즘이 어느정도의 효율성을 가지고 있는지 파악하는게 중요하다고
사료됨.
'''
